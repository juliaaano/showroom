---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: documentation
  namespace: {{ .Values.namespace }}
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: documentation
  namespace: {{ .Values.namespace }}
spec:
  output:
    to:
      kind: ImageStreamTag
      name: documentation:latest
  source:
    binary: {}
    type: Binary
  strategy:
    sourceStrategy:
      from:
        kind: ImageStreamTag
        name: httpd:2.4
        namespace: openshift
    type: Source
#registry.redhat.io/rhel8/httpd-24:1-274
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: antora
  namespace: {{ .Values.namespace }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    description: |
      Build Antora site.
spec:
  workspaces:
  - name: source
    mountPath: /antora
  steps:
  - name: build
    image: {{ .Values.documentation.antora.image }}
    args:
    - site.yml
---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: showroom
  namespace: {{ .Values.namespace }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  workspaces:
  - name: showroom
  tasks:

  - name: git-clone
    taskRef:
      kind: ClusterTask
      name: git-clone
    params:
    - name: url
      value: {{ .Values.documentation.repoUrl }}
    - name: revision
      value: {{ .Values.documentation.repoRevision }}
    - name: deleteExisting
      value: 'true'
    workspaces:
    - name: output
      workspace: showroom

  - name: build-antora
    runAfter:
    - git-clone
    taskRef:
      kind: Task
      name: antora
    workspaces:
    - name: source
      workspace: showroom

  - name: build-image
    runAfter:
    - build-antora
    taskRef:
      kind: ClusterTask
      name: openshift-client
    params:
    - name: SCRIPT
      value: |
        oc start-build documentation --from-dir="gh-pages" -n {{ .Values.namespace }} --wait=true
    workspaces:
    - name: manifest-dir
      workspace: showroom

  - name: rollout
    runAfter:
    - build-image
    taskRef:
      kind: ClusterTask
      name: openshift-client
    params:
    - name: SCRIPT
      value: |
        oc rollout restart deployment documentation -n {{ .Values.namespace }}
        oc rollout status deploy documentation -n {{ .Values.namespace }} --timeout=20s
---
apiVersion: batch/v1
kind: Job
metadata:
  name: showroom-pipeline-run
  namespace: {{ .Values.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  backoffLimit: 2
  template:
    spec:
      serviceAccountName: pipeline
      restartPolicy: Never
      containers:
      - name: main
        image: quay.io/openshift/origin-cli:latest
        command:
        - /bin/bash
        - -c
        - |
          cat <<EOF | oc create -f -
          apiVersion: tekton.dev/v1
          kind: PipelineRun
          metadata:
            generateName: showroom-
            namespace: {{ .Values.namespace }}
          spec:
            pipelineRef:
              name: showroom
            workspaces:
            - name: showroom
              volumeClaimTemplate:
                spec:
                  accessModes:
                    - ReadWriteOnce
                  resources:
                    requests:
                      storage: 1Gi
          EOF
          oc wait --for=condition=ready pod -l app.kubernetes.io/name=documentation --timeout=180s
